cs       = require 'coffeescript'

{config} = require 'package.json'

# pre-decarations
compile = find = rmDir = null

task 'clean', '', (options) ->
  rmDir options.buildDir ? config.buildDir

task 'test',  '', (options) ->

task 'build', '', (options) ->
  await invoke 'clean'
  await fs.mkdir buildDir = options.buildDir ? config.buildDir

  find 'src', (path, stat) ->
    if stat.isFile()
      compile path, options
    else if stat.isDirectory()
      await fs.mkdir path.join buildDir, path


compile = (filePath, options) ->
  buildDir = options.buildDir ? config.buildDir

  basename = path.basename filePath, '.coffee'
  destFile = path.resolve buildDir, basename + '.mjs'

  fs.readFile filePath
    .then (src) -> fs.writeFile destFile, cs.compile src

readdir = (d) -> fs.readdir d, withFileTypes: true

find = (start, fn, afterFn) ->
  if start instanceof fs.Dirent
    {fullPath: start} = stat = start
  else
    stat = fs.stat start

  if 'function' is typeof fn
    await fn start, stat

  if stat.isDirectory()
    for entry in await readdir start when entry.name not in ['.', '..']
      entry.fullPath = path.resolve start, entry.name
      await find entry, fn, afterFn

  if 'funciton' is typeof afterFn
    await afterFn start, stat

  return

rmDir = (path) ->
  find path, null, (f, stat) ->
    await
      if stat.isDirectory()
        fs.rmdir f
      else
        fs.unlink f

